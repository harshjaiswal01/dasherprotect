name: backend-ci
on:
  pull_request:
    paths: ['backend/**', '.github/workflows/backend-ci.yml']
  push:
    branches: [ main ]
    paths: ['backend/**']

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: pgvector/pgvector:pg16
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: dasherprotect
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s --health-timeout=5s --health-retries=20
      redis:
        image: redis:7-alpine
        ports: ['6379:6379']

    env:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@localhost:5432/dasherprotect
      REDIS_URL: redis://localhost:6379/0
      FLASK_ENV: testing

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install deps (backend + tooling)
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff black mypy pytest
      - name: Lint (ruff)
        working-directory: backend
        run: ruff check .
      - name: Format check (black)
        working-directory: backend
        run: black --check .
      - name: Type check (mypy)
        working-directory: backend
        run: mypy --ignore-missing-imports .
      - name: Tests (pytest)
        working-directory: backend
        run: pytest -q
      - name: Build Docker image (no push)
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: false
          tags: ghcr.io/${{ github.repository_owner }}/dasherprotect-backend:ci-${{ github.sha }}
